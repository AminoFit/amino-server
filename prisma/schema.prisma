// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  content       String
  function_name String?
  role          Role
  userId        String
  User          User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model SmsMessage {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  content   String
  userId    String
  direction MessageDirection
  User      User             @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model SmsAuthCode {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  expiresAt DateTime @default(now())
  code      String   @unique @db.VarChar(64)
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model OpenAiUsage {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  modelName        String
  promptTokens     Int
  completionTokens Int
  totalTokens      Int
  userId           String
  User             User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id            String           @id @default(cuid())
  name          String?          @db.VarChar(255)
  email         String?          @unique @db.VarChar(255)
  emailVerified DateTime?
  phone         String?          @unique @db.VarChar(255)
  dateOfBirth   DateTime?
  weightLbs     Float?
  sentContact   Boolean          @default(false)
  tzIdentifier  String           @default("America/New_York")
  Message       Message[]
  Foods         LoggedFoodItem[]
  SmsMessage    SmsMessage[]
  OpenAiUsage   OpenAiUsage[]
  Session       Session[]
  Account       Account[]
  SmsAuthCode   SmsAuthCode[]
}

enum Role {
  Assistant
  User
  System
  Function
}

model LoggedFoodItem {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  consumedOn    DateTime @default(now())
  name          String
  unit          String
  amount        Float
  fat           Float
  carbohydrates Float
  protein       Float
  calories      Float
  userId        String
  User          User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum MessageDirection {
  Inbound
  Outbound
}
