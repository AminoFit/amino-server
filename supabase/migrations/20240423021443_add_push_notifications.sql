create type "public"."PushNotificationFrequency" as enum ('ThreeTimesDaily', 'TwiceDaily', 'Daily', 'EveryOtherDay', 'Weekly', 'Never');

create table "public"."ExpoPushTokens" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "userId" uuid not null,
    "key" text not null
);


alter table "public"."ExpoPushTokens" enable row level security;

alter table "public"."User" add column "pushNotificationPreference" "PushNotificationFrequency";

CREATE UNIQUE INDEX "ExpoPushTokens_pkey" ON public."ExpoPushTokens" USING btree (id);

CREATE UNIQUE INDEX unique_userid_key ON public."ExpoPushTokens" USING btree ("userId", key);

alter table "public"."ExpoPushTokens" add constraint "ExpoPushTokens_pkey" PRIMARY KEY using index "ExpoPushTokens_pkey";

alter table "public"."ExpoPushTokens" add constraint "ExpoPushTokens_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."ExpoPushTokens" validate constraint "ExpoPushTokens_userId_fkey";

alter table "public"."ExpoPushTokens" add constraint "unique_userid_key" UNIQUE using index "unique_userid_key";

grant delete on table "public"."ExpoPushTokens" to "anon";

grant insert on table "public"."ExpoPushTokens" to "anon";

grant references on table "public"."ExpoPushTokens" to "anon";

grant select on table "public"."ExpoPushTokens" to "anon";

grant trigger on table "public"."ExpoPushTokens" to "anon";

grant truncate on table "public"."ExpoPushTokens" to "anon";

grant update on table "public"."ExpoPushTokens" to "anon";

grant delete on table "public"."ExpoPushTokens" to "authenticated";

grant insert on table "public"."ExpoPushTokens" to "authenticated";

grant references on table "public"."ExpoPushTokens" to "authenticated";

grant select on table "public"."ExpoPushTokens" to "authenticated";

grant trigger on table "public"."ExpoPushTokens" to "authenticated";

grant truncate on table "public"."ExpoPushTokens" to "authenticated";

grant update on table "public"."ExpoPushTokens" to "authenticated";

grant delete on table "public"."ExpoPushTokens" to "service_role";

grant insert on table "public"."ExpoPushTokens" to "service_role";

grant references on table "public"."ExpoPushTokens" to "service_role";

grant select on table "public"."ExpoPushTokens" to "service_role";

grant trigger on table "public"."ExpoPushTokens" to "service_role";

grant truncate on table "public"."ExpoPushTokens" to "service_role";

grant update on table "public"."ExpoPushTokens" to "service_role";

create policy "Enable read access for all users"
on "public"."ExpoPushTokens"
as permissive
for select
to public
using ((auth.uid() = "userId"));


create policy "Users can add push tokens for themsleves"
on "public"."ExpoPushTokens"
as permissive
for insert
to public
with check ((auth.uid() = "userId"));



