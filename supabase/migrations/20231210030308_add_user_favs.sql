create table "public"."UserFavoriteFoodItem" (
    "id" bigint generated by default as identity not null,
    "createdAt" timestamp with time zone not null default now(),
    "userId" uuid not null,
    "foodItemId" integer not null,
    "servingId" integer,
    "preferredAmount" double precision not null,
    "preferredUnit" text
);


alter table "public"."UserFavoriteFoodItem" enable row level security;

CREATE UNIQUE INDEX "UserFavoriteFoodItemServing_pkey" ON public."UserFavoriteFoodItem" USING btree (id);

alter table "public"."UserFavoriteFoodItem" add constraint "UserFavoriteFoodItemServing_pkey" PRIMARY KEY using index "UserFavoriteFoodItemServing_pkey";

alter table "public"."UserFavoriteFoodItem" add constraint "UserFavoriteFoodItem_foodItemId_fkey" FOREIGN KEY ("foodItemId") REFERENCES "FoodItem"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."UserFavoriteFoodItem" validate constraint "UserFavoriteFoodItem_foodItemId_fkey";

alter table "public"."UserFavoriteFoodItem" add constraint "UserFavoriteFoodItem_servingId_fkey" FOREIGN KEY ("servingId") REFERENCES "Serving"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."UserFavoriteFoodItem" validate constraint "UserFavoriteFoodItem_servingId_fkey";

alter table "public"."UserFavoriteFoodItem" add constraint "UserFavoriteFoodItem_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."UserFavoriteFoodItem" validate constraint "UserFavoriteFoodItem_userId_fkey";

create policy "Users can update all properties on their own rows"
on "public"."UserFavoriteFoodItem"
as permissive
for all
to public
using ((auth.uid() = "userId"));



